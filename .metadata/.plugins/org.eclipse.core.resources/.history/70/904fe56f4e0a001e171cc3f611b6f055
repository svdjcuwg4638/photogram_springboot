package com.cos.photogramstart.domain.likes;

import java.time.LocalDateTime;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.cos.photogramstart.domain.image.Image;
import com.cos.photogramstart.domain.subscribe.Subscribe;
import com.cos.photogramstart.domain.user.User;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Builder 
@AllArgsConstructor
@NoArgsConstructor
@Data
@Entity 

// 두개를 복합적으로 유니크를 줄때
@Table(
		uniqueConstraints = {
			@UniqueConstraint(
				name = "like_uk",
				columnNames= {"ImageId","userId"}
			)
		}
)
public class Likes {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY) 
	private int id;
	
	private Image image;
	
	private User user;
	
	private LocalDateTime createDate;
	
	@PrePersist 
	public void createDate() {
		this.createDate =  LocalDateTime.now();
	}
	
}
